const express = require("express");
const ThongBao = require("../models/ThongBao");

const router = express.Router();

// ‚úÖ API: L·∫•y t·∫•t c·∫£ th√¥ng b√°o
router.get("/", async (req, res) => {
    try {
        const thongBaos = await ThongBao.find().sort({ ngay_tao: -1 }); // L·∫•y danh s√°ch m·ªõi nh·∫•t tr∆∞·ªõc
        res.status(200).json({ message: "Danh s√°ch th√¥ng b√°o", data: thongBaos });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch th√¥ng b√°o!", error: error.message });
    }
});

// üü¢ API: Th√™m th√¥ng b√°o m·ªõi
router.post("/", async (req, res) => {
    try {
        const { tieu_de, noi_dung, nguoi_gui, loai } = req.body;

        if (!tieu_de || !noi_dung || !nguoi_gui) {
            return res.status(400).json({ message: "Thi·∫øu d·ªØ li·ªáu c·∫ßn thi·∫øt!" });
        }

        const thongBao = new ThongBao({ tieu_de, noi_dung, nguoi_gui, loai });
        await thongBao.save();
        res.status(201).json({ message: "ƒê√£ th√™m th√¥ng b√°o!", data: thongBao });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi th√™m th√¥ng b√°o!", error: error.message });
    }
});

// üõë API: X√≥a th√¥ng b√°o theo ID
router.delete("/:id", async (req, res) => {
    try {
        const { id } = req.params; // L·∫•y ID t·ª´ URL
        const deletedThongBao = await ThongBao.findByIdAndDelete(id); // S·ª≠ d·ª•ng _id

        if (!deletedThongBao) {
            return res.status(404).json({ message: "Th√¥ng b√°o kh√¥ng t·ªìn t·∫°i!" });
        }

        res.status(200).json({ message: "ƒê√£ x√≥a th√¥ng b√°o!", data: deletedThongBao });
    } catch (error) {
        res.status(500).json({ message: "L·ªói khi x√≥a th√¥ng b√°o!", error: error.message });
    }
});


module.exports = router;
